<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.egoist</groupId>
    <artifactId>parent</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>
    <name>parent</name>

    <modules>
        <module>parent-common</module>
        <module>parent-dao</module>
        <module>parent-pojo</module>
		<module>parent-interface</module>
        <module>parent-ext</module>
        <module>parent-service</module>
        <module>parent-web</module>
    </modules>

    <properties>
        <parent.version>1.0.0</parent.version>
        <okhttp.version>3.10.0</okhttp.version>
        <jackson.version>2.9.5</jackson.version>
        <commons-lang3.version>3.5</commons-lang3.version>
        <fastjson.version>1.2.30</fastjson.version>
        <java.version>1.8</java.version>
        <mybatis.version>3.4.1</mybatis.version>
        <mybatis.spring.version>1.3.0</mybatis.spring.version>
        <mysql.connector.version>8.0.11</mysql.connector.version>
        <druid.version>1.1.4</druid.version>
        <mybatis.spring.boot.starter.version>1.3.2</mybatis.spring.boot.starter.version>
        <druid.spring.boot.starter.version>1.1.9</druid.spring.boot.starter.version>
        <elasticsearch.version>6.4.3</elasticsearch.version>
        <commons-io.version>2.6</commons-io.version>
        <poi.version>4.1.1</poi.version>
        <disruptor.version>3.3.7</disruptor.version>
        <pagehelper.spring.boot.starter.version>1.2.10</pagehelper.spring.boot.starter.version>
        <spring.boot.version>2.1.7.RELEASE</spring.boot.version>
        <spring.boot.data.elasticsearch.starter.version>2.1.7.RELEASE</spring.boot.data.elasticsearch.starter.version>
        <commons-beanutils.version>1.9.4</commons-beanutils.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- inner dependencies begin-->
            <dependency>
                <groupId>com.egoist</groupId>
                <artifactId>parent</artifactId>
                <version>${parent.version}</version>
            </dependency>
            <dependency>
                <groupId>com.egoist</groupId>
                <artifactId>parent-common</artifactId>
                <version>${parent.version}</version>
            </dependency>
            <dependency>
                <groupId>com.egoist</groupId>
                <artifactId>parent-dao</artifactId>
                <version>${parent.version}</version>
            </dependency>
            <dependency>
                <groupId>com.egoist</groupId>
                <artifactId>parent-pojo</artifactId>
                <version>${parent.version}</version>
            </dependency>
			<dependency>
                <groupId>com.egoist</groupId>
                <artifactId>parent-interface</artifactId>
                <version>${parent.version}</version>
            </dependency>
            <dependency>
                <groupId>com.egoist</groupId>
                <artifactId>parent-ext</artifactId>
                <version>${parent.version}</version>
            </dependency>
            <dependency>
                <groupId>com.egoist</groupId>
                <artifactId>parent-service</artifactId>
                <version>${parent.version}</version>
            </dependency>
            <dependency>
                <groupId>com.egoist</groupId>
                <artifactId>parent-web</artifactId>
                <version>${parent.version}</version>
            </dependency>
            <!-- inner dependencies end-->

            <!--http begin-->
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp.version}</version>
            </dependency>
            <!-- http end-->

            <!-- spring boot begin -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.spring.boot.starter.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.spring.boot.starter.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper.spring.boot.starter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-elasticsearch</artifactId>
                <version>${spring.boot.data.elasticsearch.starter.version}</version>
            </dependency>
            <!-- spring boot end -->

            <!-- Jackson Json处理工具包，SpringMVC 中默认就是使用 Jackson 解析Json -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <!-- Jackson end-->

            <!-- commons-lang3 begin -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <!-- commons-lang3 end -->

            <!-- fastjson begin -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <!-- fastjson end -->

            <!-- mybatis  begin-->
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-spring</artifactId>
                <version>${mybatis.spring.version}</version>
            </dependency>
            <!-- mybatis  end-->

            <!-- mysql 连接器 begin -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.connector.version}</version>
            </dependency>
            <!-- mysql 连接器 end -->

            <!-- druid 数据库连接池 begin-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <!-- druid 数据库连接池 end-->

            <!-- elasticsearch begin-->
            <dependency>
                <groupId>org.elasticsearch</groupId>
                <artifactId>elasticsearch</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-high-level-client</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>
            <!-- elasticsearch end-->

            <!-- commons-io begin -->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <!-- commons-io end -->

            <!-- poi start-->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml-schemas</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <!-- poi end-->

            <dependency>
                <groupId>com.lmax</groupId>
                <artifactId>disruptor</artifactId>
                <version>${disruptor.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-beanutils.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <finalName>${project.artifactId}</finalName>

        <!-- maven install 跳过test方法 , Begin -->
        <defaultGoal>compile</defaultGoal>
        <!-- maven install 跳过test方法 , End -->

        <plugins>

            <!-- maven install 跳过test方法 , Begin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <!-- maven install 跳过test方法 , End -->

            <!-- 资源文件拷贝插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <!--<version>2.7</version>-->
                <version>3.0.2</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <!-- Java编译插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <!--<version>3.2</version>-->
                <version>3.6.1</version>
                <configuration>
                    <!-- <source>1.7</source> -->
                    <source>${java.version}</source>
                    <!-- <target>1.7</target> -->
                    <target>${java.version}</target>
                    <encoding>UTF-8</encoding>

                    <!-- 加入图像相关类库，Maven编译报错：
             类 JPEGImageDecoder 找不到 ！！！  ### Begin
             由于 Jenkins 中Maven 无法编译成功，暂时先去掉图片相关的 JPEGImageDecoder            -->
                    <!--<compilerArguments>
                        <verbose/>-->
                    <!-- JAVA_HOME为：C:\Java\jdk1.8.0_65 ， 不需要再包括 \jre 目录，自动加上 \jre目录，
                     如果再到加上，就会重复了，导致路径错误。 -->
                    <!--<bootclasspath>${java.home}\lib\rt.jar;${java.home}\lib\jce.jar</bootclasspath>
                </compilerArguments>-->
                    <!-- 加入图像相关类库，Maven编译报错：
             类 JPEGImageDecoder 找不到 ！！！  ### End
             -->
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!-- 配置Tomcat插件，使用Tomcat插件之后，本地就不需要单独安装Tomcat了 -->
                <!--<plugin>-->
                <!--<groupId>org.apache.tomcat.maven</groupId>-->
                <!--<artifactId>tomcat7-maven-plugin</artifactId>-->
                <!--<version>2.2</version>-->
                <!--</plugin>-->

                <!-- Tomcat 8 插件 -->
                <plugin>
                    <groupId>org.apache.tomcat.maven</groupId>
                    <artifactId>tomcat8-maven-plugin</artifactId>
                    <version>3.0-r1756463</version>
                </plugin>

                <!--
                 如果下载不了，tomcat8插件，把 <pluginRepositories> 注释打开，然后下载完成，
                 要注释掉，否则本地服务 msyt-xxx-xxx 都无法加载 ！！！
                 -->
                <!--<plugin>
                    <groupId>org.apache.tomcat.maven</groupId>
                    <artifactId>tomcat8-maven-plugin</artifactId>
                    <version>3.0-r1655215</version>
                </plugin>-->

            </plugins>

        </pluginManagement>
    </build>
</project>